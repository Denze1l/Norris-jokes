{"version":3,"sources":["assets/icons/heart.svg","components/app.module.css","components/App.js","index.js","assets/icons/like.svg"],"names":["module","exports","App","state","categoryButton","showInput","selectedOne","foundJokes","newCategory","inputText","favoriteJokes","chosenButton","e","target","id","setState","ChooseTheCategory","stopPropagation","chosenCategory","console","log","handleChange","value","jokeFromSearch","getTheJoke","axios","get","then","response","joke","data","duplicate","find","elem","undefined","jokeTime","catch","error","i","result","length","alert","likeTheJoke","likedJoke","currentTarget","dislikeTheJoke","dislike","filter","time","Date","updated_at","jokeDate","unixTime","Math","round","getTime","hoursPast","this","document","documentElement","clientWidth","className","styles","headline","hiLine","subtitle","onClick","type","onChange","placeholder","map","key","href","rel","src","warmHeart","images","alt","heart","categories","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,mC,kBCC3CD,EAAOC,QAAU,CAAC,OAAS,oBAAoB,SAAW,sBAAsB,OAAS,oBAAoB,SAAW,wB,6OCwRzGC,E,4MAlRbC,MAAQ,CACNC,gBAAgB,EAChBC,WAAW,EACXC,YAAa,GACbC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,cAAe,I,EAejBC,aAAe,SAACC,GACd,IAAIN,EAAcM,EAAEC,OAAOC,GACP,aAAhBR,EACF,EAAKS,SAAS,CAAEX,gBAAgB,EAAOC,WAAW,IACzB,aAAhBC,EACT,EAAKS,SAAS,CAAEX,gBAAgB,EAAMC,WAAW,IAEjD,EAAKU,SAAS,CAAEV,WAAW,EAAMD,gBAAgB,IAEnD,EAAKW,SAAS,CAAET,YAAaA,K,EAE/BU,kBAAoB,SAACJ,GACnBA,EAAEK,kBACF,IAAIC,EAAiBN,EAAEC,OAAOC,GAC1BN,EAAW,2DAAuDU,GACtE,EAAKH,SAAS,CAAEP,gBAChBW,QAAQC,IAAIZ,I,EAEda,aAAe,SAACT,GACd,IAAIH,EAAYG,EAAEC,OAAOS,MACrBC,EAAc,wDAAoDd,GACtE,EAAKM,SAAS,CAAEQ,iBAAgBd,e,EAclCe,WAAa,WAAO,IAAD,EACgD,EAAKrB,MAA9DG,EADS,EACTA,YAAaE,EADJ,EACIA,YAAae,EADjB,EACiBA,eAAgBhB,EADjC,EACiCA,WAE9B,aAAhBD,EACFmB,IACGC,IAAI,2CACJC,MAAK,SAACC,GACL,IAAIC,EAAOD,EAASE,KAChBC,EAAYxB,EAAWyB,MACzB,SAACC,GAAD,OAAUA,EAAKnB,KAAOc,EAASE,KAAKhB,WAEpBoB,IAAdH,EACF,EAAKP,kBACkBU,IAAdH,IACT,EAAKI,SAASN,GACVD,EAASE,KAAKhB,IAChB,EAAKC,UAAS,gBAAGR,EAAH,EAAGA,WAAH,MAAqB,CACjCA,WAAW,GAAD,mBAAMA,GAAN,CAAkBsB,YAInCO,OAAM,SAACC,GAAD,OAAWlB,QAAQC,IAAIiB,MACP,aAAhB/B,EACTmB,IACGC,IAAIlB,GACJmB,MAAK,SAACC,GACL,IAAIC,EAAOD,EAASE,KAChBC,EAAYxB,EAAWyB,MACzB,SAACC,GAAD,OAAUA,EAAKnB,KAAOc,EAASE,KAAKhB,WAEpBoB,IAAdH,EACF,EAAKP,kBACkBU,IAAdH,IACT,EAAKI,SAASN,GACVD,EAASE,KAAKhB,IAChB,EAAKC,UAAS,gBAAGR,EAAH,EAAGA,WAAH,MAAqB,CACjCA,WAAW,GAAD,mBAAMA,GAAN,CAAkBsB,YAInCO,OAAM,SAACC,GAAD,OAAWlB,QAAQC,IAAIiB,MACP,aAAhB/B,GACTmB,IACGC,IAAIH,GACJI,MAAK,SAACC,GACL,IADmB,IAAD,WACTU,GACPnB,QAAQC,IAAIQ,EAASE,KAAKS,QAC1B,IAAIR,EAAYxB,EAAWyB,MACzB,SAACC,GAAD,OAAUA,EAAKnB,KAAOc,EAASE,KAAKS,OAAOD,GAAGxB,MAGhD,GADAK,QAAQC,IAAIW,QACMG,IAAdH,EAAyB,CAC3BZ,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIQ,EAASE,KAAKS,OAAOC,QACjC,IAAIX,EAAOD,EAASE,KAAKS,OAAOD,GAKhC,OAJA,EAAKH,SAASN,GACd,EAAKd,UAAS,gBAAGR,EAAH,EAAGA,WAAH,MAAqB,CACjCA,WAAW,GAAD,mBAAMA,GAAN,CAAkBsB,QAE9B,UAdKS,EAAI,EAAGA,GAAKV,EAASE,KAAKS,OAAOC,OAAQF,IAAK,gBAA9CA,GAcL,UAILF,OAAM,SAACC,GAAD,OACLI,MAAM,uD,EAIdC,YAAc,SAAC9B,GAAO,IAEhB+B,EADmB,EAAKxC,MAApBI,WACmByB,MAAK,SAACC,GAAD,OAAUA,EAAKnB,KAAOF,EAAEgC,cAAc9B,MACtEK,QAAQC,IAAIuB,GACZ,EAAK5B,UAAS,gBAAGL,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBiC,S,EAGtCE,eAAiB,SAACjC,GAChB,IAAIkC,EAAUlC,EAAEgC,cAAc9B,GAC9B,EAAKC,UAAS,kBAAwB,CACpCL,cADY,EAAGA,cACcqC,QAAO,SAACd,GAAD,OAAUA,EAAKnB,KAAOgC,U,uDA1FrDjB,GACP,IAAImB,EAAO,IAAIC,KACXd,EAAWN,EAAKqB,WAChBC,EAAW,IAAIF,KAAKd,GACpBiB,EACFC,KAAKC,MAAMN,EAAKO,UAAY,KAC5BF,KAAKC,MAAMH,EAASI,UAAY,KAC9BC,EAAYH,KAAKC,MAAMF,EAAW,GAAK,IAC3CvB,EAAK2B,UAAYA,I,+BAsFT,IAAD,SAOHC,KAAKtD,MALPC,EAFK,EAELA,eACAC,EAHK,EAGLA,UACAE,EAJK,EAILA,WACAE,EALK,EAKLA,UACAC,EANK,EAMLA,cAKkBgD,SAASC,gBAAgBC,YAC7C,OACE,6BACE,uBAAGC,UAAWC,IAAOC,UAArB,YACA,wBAAIF,UAAWC,IAAOE,QAAtB,QACA,wBAAIH,UAAWC,IAAOG,UAAtB,0CACA,yBAAKJ,UAAU,aAAaK,QAAST,KAAK9C,cACxC,4BAAQwD,KAAK,SAASrD,GAAG,YAAzB,UAGA,4BAAQqD,KAAK,SAASrD,GAAG,YAAzB,mBAGCV,GACC,yBAAK8D,QAAST,KAAKzC,mBACjB,4BAAQmD,KAAK,SAASrD,GAAG,UAAzB,UAGA,4BAAQqD,KAAK,SAASrD,GAAG,UAAzB,UAGA,4BAAQqD,KAAK,SAASrD,GAAG,aAAzB,aAGA,4BAAQqD,KAAK,SAASrD,GAAG,OAAzB,QAKJ,4BAAQqD,KAAK,SAASrD,GAAG,YAAzB,WAIDT,GACC,6BACE,2BACE+D,SAAUX,KAAKpC,aACfC,MAAOb,EACP0D,KAAK,OACLE,YAAY,yBAIlB,4BAAQF,KAAK,SAASD,QAAST,KAAKjC,YAApC,cAGA,wBAAIqC,UAAU,cACXtD,EAAW+D,KAAI,SAACzC,GAAD,OACd,wBAAI0C,IAAK1C,EAAKf,IACZ,uBAAG+C,UAAU,SAAb,MAEE,uBACEW,KAAI,2CAAsC3C,EAAKf,IAC/CD,OAAO,SACP4D,IAAI,uBAEH5C,EAAKf,KAGV,6BAEGJ,EAAcsB,MAAK,SAACC,GAAD,OAAUA,EAAKnB,KAAOe,EAAKf,MAC7C,yBACEoD,QAAS,EAAKrB,eACd6B,IAAKC,IACLd,UAAWC,IAAOc,OAClBC,IAAI,UACJ/D,GAAIe,EAAKf,KAGX,yBACEA,GAAIe,EAAKf,GACToD,QAAS,EAAKxB,YACdgC,IAAKI,IACLjB,UAAWC,IAAOc,OAClBC,IAAI,UAIV,2BAAIhD,EAAKP,OACT,6BACE,2CAAiBO,EAAK2B,UAAtB,cACC3B,EAAKkD,YAAc,2BAAIlD,EAAKkD,kBAKrC,6BACE,wCACCrE,EAAc4D,KAAI,SAACzC,GAAD,OACjB,wBAAI0C,IAAK1C,EAAKf,IACZ,uBAAG+C,UAAU,SAAb,MAEE,uBACEW,KAAI,2CAAsC3C,EAAKf,IAC/CD,OAAO,SACP4D,IAAI,uBAEH5C,EAAKf,KAGV,6BACE,yBACEA,GAAIe,EAAKf,GACToD,QAAS,EAAKrB,eACd6B,IAAKC,IACLd,UAAWC,IAAOc,OAClBC,IAAI,aAGR,2BAAIhD,EAAKP,OACT,6BACE,2CAAiBO,EAAK2B,UAAtB,cACC3B,EAAKkD,YAAc,2BAAIlD,EAAKkD,uB,GAzQ3BC,a,MCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzB,SAAS0B,eAAe,U,kBCT1BpF,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.c7f21fe9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.ec622305.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"app_images__w79ZQ\",\"headline\":\"app_headline__Rsx-L\",\"hiLine\":\"app_hiLine__i6Au4\",\"subtitle\":\"app_subtitle__2pC7S\"};","import React, { Component } from \"react\";\n// import ChosenJoke from \"./ChosenJoke/chosenJoke\";\nimport axios from \"axios\";\nimport heart from \"../assets/icons/heart.svg\";\nimport warmHeart from \"../assets/icons/like.svg\";\nimport styles from \"./app.module.css\";\nclass App extends Component {\n  state = {\n    categoryButton: false,\n    showInput: false,\n    selectedOne: \"\",\n    foundJokes: [],\n    newCategory: \"\",\n    inputText: \"\",\n    favoriteJokes: [],\n  };\n  // componentDidMount() {\n  //   const storageJokes = localStorage.getItem(\"favoriteJokes\");\n  //   if (storageJokes) {\n  //     this.setState({ favoriteJokes: JSON.parse(storageJokes) });\n  //   }\n  // }\n\n  // componentDidUpdate() {\n  //   const { favoriteJokes } = this.state;\n  //   // if (favoriteJokes.length > 0) {}\n  //   localStorage.setItem(\"favoriteJokes\", JSON.stringify(favoriteJokes));\n  // }\n\n  chosenButton = (e) => {\n    let selectedOne = e.target.id;\n    if (selectedOne === \"button_1\") {\n      this.setState({ categoryButton: false, showInput: false });\n    } else if (selectedOne === \"button_2\") {\n      this.setState({ categoryButton: true, showInput: false });\n    } else {\n      this.setState({ showInput: true, categoryButton: false });\n    }\n    this.setState({ selectedOne: selectedOne });\n  };\n  ChooseTheCategory = (e) => {\n    e.stopPropagation();\n    let chosenCategory = e.target.id;\n    let newCategory = `https://api.chucknorris.io/jokes/random?category=${chosenCategory}`;\n    this.setState({ newCategory });\n    console.log(newCategory);\n  };\n  handleChange = (e) => {\n    let inputText = e.target.value;\n    let jokeFromSearch = `https://api.chucknorris.io/jokes/search?query=${inputText}`;\n    this.setState({ jokeFromSearch, inputText });\n  };\n\n  jokeTime(joke) {\n    let time = new Date();\n    let jokeTime = joke.updated_at;\n    let jokeDate = new Date(jokeTime);\n    let unixTime =\n      Math.round(time.getTime() / 1000.0) -\n      Math.round(jokeDate.getTime() / 1000.0);\n    let hoursPast = Math.round(unixTime / 60 / 60);\n    joke.hoursPast = hoursPast;\n  }\n\n  getTheJoke = () => {\n    const { selectedOne, newCategory, jokeFromSearch, foundJokes } = this.state;\n\n    if (selectedOne === \"button_1\") {\n      axios\n        .get(\"https://api.chucknorris.io/jokes/random\")\n        .then((response) => {\n          let joke = response.data;\n          let duplicate = foundJokes.find(\n            (elem) => elem.id === response.data.id\n          );\n          if (duplicate !== undefined) {\n            this.getTheJoke();\n          } else if (duplicate === undefined) {\n            this.jokeTime(joke);\n            if (response.data.id)\n              this.setState(({ foundJokes }) => ({\n                foundJokes: [...foundJokes, joke],\n              }));\n          }\n        })\n        .catch((error) => console.log(error));\n    } else if (selectedOne === \"button_2\") {\n      axios\n        .get(newCategory)\n        .then((response) => {\n          let joke = response.data;\n          let duplicate = foundJokes.find(\n            (elem) => elem.id === response.data.id\n          );\n          if (duplicate !== undefined) {\n            this.getTheJoke();\n          } else if (duplicate === undefined) {\n            this.jokeTime(joke);\n            if (response.data.id)\n              this.setState(({ foundJokes }) => ({\n                foundJokes: [...foundJokes, joke],\n              }));\n          }\n        })\n        .catch((error) => console.log(error));\n    } else if (selectedOne === \"button_3\") {\n      axios\n        .get(jokeFromSearch)\n        .then((response) => {\n          for (let i = 0; i <= response.data.result.length; i++) {\n            console.log(response.data.result);\n            let duplicate = foundJokes.find(\n              (elem) => elem.id === response.data.result[i].id\n            );\n            console.log(duplicate);\n            if (duplicate === undefined) {\n              console.log(i);\n              console.log(response.data.result.length);\n              let joke = response.data.result[i];\n              this.jokeTime(joke);\n              this.setState(({ foundJokes }) => ({\n                foundJokes: [...foundJokes, joke],\n              }));\n              break;\n            }\n          }\n        })\n        .catch((error) =>\n          alert(\"You did it you crazy! You watched all the jokes\")\n        );\n    }\n  };\n  likeTheJoke = (e) => {\n    const { foundJokes } = this.state;\n    let likedJoke = foundJokes.find((elem) => elem.id === e.currentTarget.id);\n    console.log(likedJoke);\n    this.setState(({ favoriteJokes }) => ({\n      favoriteJokes: [...favoriteJokes, likedJoke],\n    }));\n  };\n  dislikeTheJoke = (e) => {\n    let dislike = e.currentTarget.id;\n    this.setState(({ favoriteJokes }) => ({\n      favoriteJokes: favoriteJokes.filter((elem) => elem.id !== dislike),\n    }));\n  };\n\n  render() {\n    const {\n      categoryButton,\n      showInput,\n      foundJokes,\n      inputText,\n      favoriteJokes,\n    } = this.state;\n    const mobileMaxWidth = 835;\n    const tabletWidth = 836;\n    const desktopWidth = 1440;\n    const deviseWidth = document.documentElement.clientWidth;\n    return (\n      <div>\n        <p className={styles.headline}>MSI 2020</p>\n        <h1 className={styles.hiLine}>Hey!</h1>\n        <h2 className={styles.subtitle}>Let’s try to find a joke for you:</h2>\n        <div className=\"buttonsDiv\" onClick={this.chosenButton}>\n          <button type=\"button\" id=\"button_1\">\n            Random\n          </button>\n          <button type=\"button\" id=\"button_2\">\n            From categories\n          </button>\n          {categoryButton && (\n            <div onClick={this.ChooseTheCategory}>\n              <button type=\"button\" id=\"animal\">\n                Animal\n              </button>\n              <button type=\"button\" id=\"career\">\n                Career\n              </button>\n              <button type=\"button\" id=\"celebrity\">\n                Celebrity\n              </button>\n              <button type=\"button\" id=\"dev\">\n                Dev\n              </button>\n            </div>\n          )}\n          <button type=\"button\" id=\"button_3\">\n            Search\n          </button>\n        </div>\n        {showInput && (\n          <div>\n            <input\n              onChange={this.handleChange}\n              value={inputText}\n              type=\"text\"\n              placeholder=\"Free text search...\"\n            ></input>\n          </div>\n        )}\n        <button type=\"button\" onClick={this.getTheJoke}>\n          Get a joke\n        </button>\n        <ul className=\"chosenJoke\">\n          {foundJokes.map((joke) => (\n            <li key={joke.id}>\n              <p className=\"forID\">\n                ID:\n                <a\n                  href={`https://api.chucknorris.io/jokes/${joke.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {joke.id}\n                </a>\n              </p>\n              <div>\n                {/* favoriteJokes.find((elem) => elem.id === joke.id)  */}\n                {favoriteJokes.find((elem) => elem.id === joke.id) ? (\n                  <img\n                    onClick={this.dislikeTheJoke}\n                    src={warmHeart}\n                    className={styles.images}\n                    alt=\"dislike\"\n                    id={joke.id}\n                  />\n                ) : (\n                  <img\n                    id={joke.id}\n                    onClick={this.likeTheJoke}\n                    src={heart}\n                    className={styles.images}\n                    alt=\"like\"\n                  />\n                )}\n              </div>\n              <p>{joke.value}</p>\n              <div>\n                <p>Last update: {joke.hoursPast} hours ago</p>\n                {joke.categories && <p>{joke.categories}</p>}\n              </div>\n            </li>\n          ))}\n        </ul>\n        <div>\n          <h1>Favorite</h1>\n          {favoriteJokes.map((joke) => (\n            <li key={joke.id}>\n              <p className=\"forID\">\n                ID:\n                <a\n                  href={`https://api.chucknorris.io/jokes/${joke.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {joke.id}\n                </a>\n              </p>\n              <div>\n                <img\n                  id={joke.id}\n                  onClick={this.dislikeTheJoke}\n                  src={warmHeart}\n                  className={styles.images}\n                  alt=\"dislike\"\n                />\n              </div>\n              <p>{joke.value}</p>\n              <div>\n                <p>Last update: {joke.hoursPast} hours ago</p>\n                {joke.categories && <p>{joke.categories}</p>}\n              </div>\n            </li>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// rateTheJoke = (e) => {\n//   const { favoriteJokes, foundJokes } = this.state;\n//   let likedJoke = foundJokes.find((elem) => elem.id === e.currentTarget.id);\n//   console.log(likedJoke.liked);\n//   if (likedJoke.liked) {\n//     likedJoke.liked = false;\n//     console.log(\"hello\");\n//     let index = favoriteJokes.indexOf(likedJoke);\n//     // console.log(index);\n//     // console.log(favoriteJokes.splice(index, 1));\n//     // console.log(likedJoke.id);\n//     // console.log(favoriteJokes.filter((elem) => elem.id !== likedJoke.id));\n//     return this.setState((prevState) => {\n//       prevState.favoriteJokes.splice(index, 1);\n//     });\n//   } else if (!likedJoke.liked) {\n//     console.log(\"hi\");\n//     likedJoke.liked = true;\n//     this.setState(({ favoriteJokes }) => ({\n//       favoriteJokes: [...favoriteJokes, likedJoke],\n//     }));\n//   }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheet/main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/like.e87899ae.svg\";"],"sourceRoot":""}